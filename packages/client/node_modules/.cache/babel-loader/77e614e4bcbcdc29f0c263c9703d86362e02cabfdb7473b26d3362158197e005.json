{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elaia\\\\YandexDisk\\\\Frontend\\\\\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E\\\\react-todo-list\\\\packages\\\\client\\\\src\\\\pages\\\\Tasks\\\\Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Container from '../../components/Container/Container';\nimport Headline1 from '../../components/UI/Headline1/Headline1';\nimport ToDoList from '../../components/ToDoList/ToDoList';\nimport RoundButton from '../../components/UI/RoundButton/RoundButton';\nimport style from './Tasks.module.less';\nimport { ReactComponent as Plus } from '../../assets/svg/plus.svg';\nimport Modal from '../../components/UI/Modal/Modal';\nimport AddEditForm from '../../components/AddEditForm/AddEditForm';\nimport axios from 'axios';\nimport Loader from '../../components/UI/Loader/Loader';\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.extend(utc);\nexport default function Tasks() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isEdit, setIsEdit] = useState(false);\n  const [taskForEdit, setTaskForEdit] = useState({\n    id: 0,\n    completed: false,\n    expire: '',\n    name: '',\n    description: '',\n    files: []\n  });\n  const [modal, setModal] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchTasks = async () => {\n    setIsLoading(true);\n    const response = await axios.get('http://localhost:5000/read');\n    setTasks(response.data);\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const setCompleted = (completed, completedTask) => {\n    setTasks(tasks.map(task => {\n      if (task.id === completedTask.id) {\n        task.completed = completed;\n        return task;\n      }\n      return task;\n    }));\n    let formData = new FormData();\n    formData.append('id', completedTask.id);\n    formData.append('completed', completedTask.completed);\n    formData.append('expire', completedTask.expire);\n    formData.append('name', completedTask.name);\n    formData.append('description', completedTask.description);\n    for (const file of completedTask.files) {\n      formData.append('files', file);\n    }\n    axios.post('http://localhost:5000/update', formData, {\n      headers: {\n        'X-HTTP-Method-Override': 'PUT'\n      }\n    });\n  };\n  const openEditForm = task => {\n    setIsEdit(true);\n    setTaskForEdit(task);\n    setModal(true);\n  };\n  const openAddForm = () => {\n    setIsEdit(false);\n    setTaskForEdit({\n      id: 0,\n      completed: false,\n      expire: dayjs.utc().format('YYYY-MM-DDTHH:mm'),\n      name: '',\n      description: '',\n      files: []\n    });\n    setModal(true);\n  };\n  const addTask = newTask => {\n    setTasks([...tasks, newTask]);\n    setModal(false);\n  };\n  const editTask = editedTask => {\n    setTasks(tasks.map(task => {\n      if (task.id === editedTask.id) {\n        return editedTask;\n      }\n      return task;\n    }));\n    setModal(false);\n  };\n  const removeTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n    axios.delete(`http://localhost:5000/delete/${taskId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: style.Tasks,\n    children: [modal && /*#__PURE__*/_jsxDEV(Modal, {\n      className: style.Tasks__modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(AddEditForm, {\n        className: style.Tasks__form,\n        addTask: addTask,\n        editTask: editTask,\n        taskForEdit: taskForEdit,\n        isEdit: isEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Headline1, {\n      className: style.Tasks__headline,\n      children: \"ToDo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      className: style.Tasks__loader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ToDoList, {\n      className: style.Tasks__list,\n      tasks: tasks,\n      openEditForm: openEditForm,\n      removeTask: removeTask,\n      setCompleted: setCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RoundButton, {\n      className: style.Tasks__add,\n      onClick: openAddForm,\n      children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"wT1f7dojwR1YKXjZFKR9Noj+H/c=\");\n_c = Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","Container","Headline1","ToDoList","RoundButton","style","ReactComponent","Plus","Modal","AddEditForm","axios","Loader","dayjs","utc","extend","Tasks","tasks","setTasks","isEdit","setIsEdit","taskForEdit","setTaskForEdit","id","completed","expire","name","description","files","modal","setModal","isLoading","setIsLoading","fetchTasks","response","get","data","setCompleted","completedTask","map","task","formData","FormData","append","file","post","headers","openEditForm","openAddForm","format","addTask","newTask","editTask","editedTask","removeTask","taskId","filter","delete","Tasks__modal","Tasks__form","Tasks__headline","Tasks__loader","Tasks__list","Tasks__add"],"sources":["C:/Users/elaia/YandexDisk/Frontend/Портфолио/react-todo-list/packages/client/src/pages/Tasks/Tasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Container from '../../components/Container/Container';\r\nimport Headline1 from '../../components/UI/Headline1/Headline1';\r\nimport ToDoList from '../../components/ToDoList/ToDoList';\r\nimport RoundButton from '../../components/UI/RoundButton/RoundButton';\r\nimport style from './Tasks.module.less';\r\nimport { ReactComponent as Plus } from '../../assets/svg/plus.svg';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport AddEditForm from '../../components/AddEditForm/AddEditForm';\r\nimport axios from 'axios';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport dayjs from 'dayjs';\r\nimport utc from 'dayjs/plugin/utc';\r\ndayjs.extend(utc);\r\n\r\nexport default function Tasks() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [taskForEdit, setTaskForEdit] = useState({\r\n    id: 0,\r\n    completed: false,\r\n    expire: '',\r\n    name: '',\r\n    description: '',\r\n    files: [],\r\n  });\r\n  const [modal, setModal] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchTasks = async () => {\r\n    setIsLoading(true);\r\n    const response = await axios.get('http://localhost:5000/read');\r\n    setTasks(response.data);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const setCompleted = (completed, completedTask) => {\r\n    setTasks(\r\n      tasks.map(task => {\r\n        if (task.id === completedTask.id) {\r\n          task.completed = completed;\r\n          return task;\r\n        }\r\n\r\n        return task;\r\n      })\r\n    );\r\n\r\n    let formData = new FormData();\r\n\r\n    formData.append('id', completedTask.id);\r\n    formData.append('completed', completedTask.completed);\r\n    formData.append('expire', completedTask.expire);\r\n    formData.append('name', completedTask.name);\r\n    formData.append('description', completedTask.description);\r\n    for (const file of completedTask.files) {\r\n      formData.append('files', file);\r\n    }\r\n\r\n    axios.post('http://localhost:5000/update', formData, {\r\n      headers: {\r\n        'X-HTTP-Method-Override': 'PUT',\r\n      },\r\n    });\r\n  };\r\n\r\n  const openEditForm = task => {\r\n    setIsEdit(true);\r\n    setTaskForEdit(task);\r\n    setModal(true);\r\n  };\r\n\r\n  const openAddForm = () => {\r\n    setIsEdit(false);\r\n    setTaskForEdit({\r\n      id: 0,\r\n      completed: false,\r\n      expire: dayjs.utc().format('YYYY-MM-DDTHH:mm'),\r\n      name: '',\r\n      description: '',\r\n      files: [],\r\n    });\r\n    setModal(true);\r\n  };\r\n\r\n  const addTask = newTask => {\r\n    setTasks([...tasks, newTask]);\r\n    setModal(false);\r\n  };\r\n\r\n  const editTask = editedTask => {\r\n    setTasks(\r\n      tasks.map(task => {\r\n        if (task.id === editedTask.id) {\r\n          return editedTask;\r\n        }\r\n\r\n        return task;\r\n      })\r\n    );\r\n\r\n    setModal(false);\r\n  };\r\n\r\n  const removeTask = taskId => {\r\n    setTasks(tasks.filter(task => task.id !== taskId));\r\n    axios.delete(`http://localhost:5000/delete/${taskId}`);\r\n  };\r\n\r\n  return (\r\n    <Container className={style.Tasks}>\r\n      {modal && (\r\n        <Modal\r\n          className={style.Tasks__modal}\r\n          setVisible={setModal}\r\n        >\r\n          <AddEditForm\r\n            className={style.Tasks__form}\r\n            addTask={addTask}\r\n            editTask={editTask}\r\n            taskForEdit={taskForEdit}\r\n            isEdit={isEdit}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <Headline1 className={style.Tasks__headline}>ToDo List</Headline1>\r\n      {isLoading ? (\r\n        <Loader className={style.Tasks__loader} />\r\n      ) : (\r\n        <ToDoList\r\n          className={style.Tasks__list}\r\n          tasks={tasks}\r\n          openEditForm={openEditForm}\r\n          removeTask={removeTask}\r\n          setCompleted={setCompleted}\r\n        ></ToDoList>\r\n      )}\r\n      <RoundButton\r\n        className={style.Tasks__add}\r\n        onClick={openAddForm}\r\n      >\r\n        <Plus />\r\n      </RoundButton>\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}