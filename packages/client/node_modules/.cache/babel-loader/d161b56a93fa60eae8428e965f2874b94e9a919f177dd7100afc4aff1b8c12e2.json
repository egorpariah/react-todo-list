{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elaia\\\\YandexDisk\\\\Frontend\\\\\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E\\\\react-todo-list\\\\packages\\\\client\\\\src\\\\components\\\\UI\\\\FileInput\\\\FileInput.jsx\";\nimport React from 'react';\nimport style from './FileInput.module.less';\nimport { ReactComponent as Cross } from '../../../assets/svg/cross.svg';\n\n/**\r\n * File input component\r\n * @param {Object} props Component props\r\n * @param {string} [props.className] External CSS classes\r\n * @param {FileList|[]} props.newFiles External CSS classes\r\n * @param {function(React.MouseEvent): void} props.clearFileInput Clears file list in input\r\n * @param {function(React.ChangeEvent): void} props.onChange File input onChange event handler\r\n * @returns {JSX.Element} File input component\r\n * @example\r\n * const [newFiles, setNewFIles] = useState([]);\r\n * return (\r\n *   <FileInput\r\n *     newFiles={newFiles}\r\n *     className='Form__files'\r\n *     onChange={handleFilesChange}\r\n *     clearFileInput={clearFileInput}\r\n *   />\r\n * )\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileInput(_ref) {\n  let {\n    className,\n    newFiles,\n    clearFileInput,\n    onChange\n  } = _ref;\n  console.log(newFiles);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: className ? `${style.FileInput} ${className} ${!newFiles.length && style['FileInput--empty']}` : style.FileInput,\n    children: [newFiles.length ? /*#__PURE__*/_jsxDEV(Cross, {\n      className: style.FileInput__icon,\n      onClick: e => clearFileInput(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: style.FileInput__text,\n      children: newFiles.length ? Object.values(newFiles).map(newFile => newFile.name).join(', ') : 'Attach files'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: style.FileInput__input,\n      type: \"file\",\n      files: newFiles,\n      multiple: true,\n      onChange: e => onChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = FileInput;\nexport default FileInput;\nvar _c;\n$RefreshReg$(_c, \"FileInput\");","map":{"version":3,"names":["React","style","ReactComponent","Cross","FileInput","className","newFiles","clearFileInput","onChange","console","log","length","FileInput__icon","e","FileInput__text","Object","values","map","newFile","name","join","FileInput__input"],"sources":["C:/Users/elaia/YandexDisk/Frontend/Портфолио/react-todo-list/packages/client/src/components/UI/FileInput/FileInput.jsx"],"sourcesContent":["import React from 'react';\r\nimport style from './FileInput.module.less';\r\nimport { ReactComponent as Cross } from '../../../assets/svg/cross.svg';\r\n\r\n/**\r\n * File input component\r\n * @param {Object} props Component props\r\n * @param {string} [props.className] External CSS classes\r\n * @param {FileList|[]} props.newFiles External CSS classes\r\n * @param {function(React.MouseEvent): void} props.clearFileInput Clears file list in input\r\n * @param {function(React.ChangeEvent): void} props.onChange File input onChange event handler\r\n * @returns {JSX.Element} File input component\r\n * @example\r\n * const [newFiles, setNewFIles] = useState([]);\r\n * return (\r\n *   <FileInput\r\n *     newFiles={newFiles}\r\n *     className='Form__files'\r\n *     onChange={handleFilesChange}\r\n *     clearFileInput={clearFileInput}\r\n *   />\r\n * )\r\n */\r\nfunction FileInput({ className, newFiles, clearFileInput, onChange }) {\r\n  console.log(newFiles);\r\n  return (\r\n    <label\r\n      className={\r\n        className\r\n          ? `${style.FileInput} ${className} ${\r\n              !newFiles.length && style['FileInput--empty']\r\n            }`\r\n          : style.FileInput\r\n      }\r\n    >\r\n      {newFiles.length ? (\r\n        <Cross\r\n          className={style.FileInput__icon}\r\n          onClick={e => clearFileInput(e)}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n      <span className={style.FileInput__text}>\r\n        {newFiles.length\r\n          ? Object.values(newFiles)\r\n              .map(newFile => newFile.name)\r\n              .join(', ')\r\n          : 'Attach files'}\r\n      </span>\r\n      <input\r\n        className={style.FileInput__input}\r\n        type='file'\r\n        files={newFiles}\r\n        multiple\r\n        onChange={e => onChange(e)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default FileInput;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,SAASC,cAAc,IAAIC,KAAK,QAAQ,+BAA+B;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAmBA,SAASC,SAAS,OAAoD;EAAA,IAAnD;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,cAAc;IAAEC;EAAS,CAAC;EAClEC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrB,oBACE;IACE,SAAS,EACPD,SAAS,GACJ,GAAEJ,KAAK,CAACG,SAAU,IAAGC,SAAU,IAC9B,CAACC,QAAQ,CAACK,MAAM,IAAIV,KAAK,CAAC,kBAAkB,CAC7C,EAAC,GACFA,KAAK,CAACG,SACX;IAAA,WAEAE,QAAQ,CAACK,MAAM,gBACd,QAAC,KAAK;MACJ,SAAS,EAAEV,KAAK,CAACW,eAAgB;MACjC,OAAO,EAAEC,CAAC,IAAIN,cAAc,CAACM,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAChC,GAEF,EACD,eACD;MAAM,SAAS,EAAEZ,KAAK,CAACa,eAAgB;MAAA,UACpCR,QAAQ,CAACK,MAAM,GACZI,MAAM,CAACC,MAAM,CAACV,QAAQ,CAAC,CACpBW,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAC5BC,IAAI,CAAC,IAAI,CAAC,GACb;IAAc;MAAA;MAAA;MAAA;IAAA,QACb,eACP;MACE,SAAS,EAAEnB,KAAK,CAACoB,gBAAiB;MAClC,IAAI,EAAC,MAAM;MACX,KAAK,EAAEf,QAAS;MAChB,QAAQ;MACR,QAAQ,EAAEO,CAAC,IAAIL,QAAQ,CAACK,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAC3B;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEZ;AAAC,KApCQT,SAAS;AAsClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}