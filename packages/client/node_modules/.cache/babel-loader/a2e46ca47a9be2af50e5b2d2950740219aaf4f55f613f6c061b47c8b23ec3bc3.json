{"ast":null,"code":"import React from'react';import style from'./Loader.module.less';/**\r\n * Loader component\r\n * @param {Object} props Component props\r\n * @param {string} [props.className] External CSS classes\r\n * @returns {JSX.Element} Loader element\r\n * @example\r\n * return (\r\n *   <Loader className='List__loader'/>\r\n * )\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Loader(_ref){var className=_ref.className;return/*#__PURE__*/_jsx(\"div\",{className:className?\"\".concat(style.Loader,\" \").concat(className):style.Loader,children:/*#__PURE__*/_jsxs(\"div\",{className:style['lds-ellipsis'],children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"div\",{})]})});}export default Loader;","map":{"version":3,"names":["React","style","Loader","className"],"sources":["C:/Users/elaia/YandexDisk/Frontend/Портфолио/react-todo-list/packages/client/src/components/UI/Loader/Loader.jsx"],"sourcesContent":["import React from 'react';\r\nimport style from './Loader.module.less';\r\n\r\n/**\r\n * Loader component\r\n * @param {Object} props Component props\r\n * @param {string} [props.className] External CSS classes\r\n * @returns {JSX.Element} Loader element\r\n * @example\r\n * return (\r\n *   <Loader className='List__loader'/>\r\n * )\r\n */\r\nfunction Loader({ className }) {\r\n  return (\r\n    <div className={className ? `${style.Loader} ${className}` : style.Loader}>\r\n      <div className={style['lds-ellipsis']}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,MAAK,KAAM,sBAAsB,CAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GATA,wFAUA,QAASC,OAAM,MAAgB,IAAbC,UAAS,MAATA,SAAS,CACzB,mBACE,YAAK,SAAS,CAAEA,SAAS,WAAMF,KAAK,CAACC,MAAM,aAAIC,SAAS,EAAKF,KAAK,CAACC,MAAO,uBACxE,aAAK,SAAS,CAAED,KAAK,CAAC,cAAc,CAAE,wBACpC,cAAW,cACX,cAAW,cACX,cAAW,cACX,cAAW,GACP,EACF,CAEV,CAEA,cAAeC,OAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}