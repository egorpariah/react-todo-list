{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elaia\\\\YandexDisk\\\\Frontend\\\\\\u041F\\u043E\\u0440\\u0442\\u0444\\u043E\\u043B\\u0438\\u043E\\\\react-todo-list\\\\packages\\\\client\\\\src\\\\components\\\\UI\\\\IconButton\\\\IconButton.jsx\";\nimport React from 'react';\nimport style from './IconButton.module.less';\n\n/**\r\n * Icon button\r\n * @param {Object} props Component props\r\n * @param {string} [props.className] External CSS classes\r\n * @param {string} props.children Inner text\r\n * @param {function(React.MouseEvent): void} props.clearFileInput Clears file list in input\r\n * @param {function(React.ChangeEvent): void} props.onChange File input onChange event handler\r\n * @returns {JSX.Element} Icon button\r\n * @example\r\n * const [newFiles, setNewFIles] = useState([]);\r\n * return (\r\n *   <FileInput\r\n *     newFiles={newFiles}\r\n *     className='Form__files'\r\n *     onChange={handleFilesChange}\r\n *     clearFileInput={clearFileInput}\r\n *   />\r\n * )\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IconButton(_ref) {\n  let {\n    className,\n    children,\n    modifier,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: [className ? `${style.IconButton} ${className}` : style.IconButton, modifier ? ` ${style[`IconButton--${modifier}`]}` : ''].join(''),\n    onClick: onClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = IconButton;\nexport default IconButton;\nvar _c;\n$RefreshReg$(_c, \"IconButton\");","map":{"version":3,"names":["React","style","IconButton","className","children","modifier","onClick","join"],"sources":["C:/Users/elaia/YandexDisk/Frontend/Портфолио/react-todo-list/packages/client/src/components/UI/IconButton/IconButton.jsx"],"sourcesContent":["import React from 'react';\r\nimport style from './IconButton.module.less';\r\n\r\n/**\r\n * Icon button\r\n * @param {Object} props Component props\r\n * @param {string} [props.className] External CSS classes\r\n * @param {string} props.children Inner text\r\n * @param {function(React.MouseEvent): void} props.clearFileInput Clears file list in input\r\n * @param {function(React.ChangeEvent): void} props.onChange File input onChange event handler\r\n * @returns {JSX.Element} Icon button\r\n * @example\r\n * const [newFiles, setNewFIles] = useState([]);\r\n * return (\r\n *   <FileInput\r\n *     newFiles={newFiles}\r\n *     className='Form__files'\r\n *     onChange={handleFilesChange}\r\n *     clearFileInput={clearFileInput}\r\n *   />\r\n * )\r\n */\r\nfunction IconButton({ className, children, modifier, onClick }) {\r\n  return (\r\n    <button\r\n      className={[\r\n        className ? `${style.IconButton} ${className}` : style.IconButton,\r\n        modifier ? ` ${style[`IconButton--${modifier}`]}` : '',\r\n      ].join('')}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default IconButton;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,0BAA0B;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAmBA,SAASC,UAAU,OAA6C;EAAA,IAA5C;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAQ,CAAC;EAC5D,oBACE;IACE,SAAS,EAAE,CACTH,SAAS,GAAI,GAAEF,KAAK,CAACC,UAAW,IAAGC,SAAU,EAAC,GAAGF,KAAK,CAACC,UAAU,EACjEG,QAAQ,GAAI,IAAGJ,KAAK,CAAE,eAAcI,QAAS,EAAC,CAAE,EAAC,GAAG,EAAE,CACvD,CAACE,IAAI,CAAC,EAAE,CAAE;IACX,OAAO,EAAED,OAAQ;IAAA,UAEhBF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACF;AAEb;AAAC,KAZQF,UAAU;AAcnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}